sim_regression <- function(n) {
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
e <- rnorm(n, 0, 1)
y <- x*1 + z*2 + x*z*1 + e
data <- data.frame(x, z, y)
regression <- lm(y ~ x + z + x*z, data = data)
return(coef(regression))
}
set.seed(123)
# run simulation n times
n_sims <- 5000
results <- t(replicate(n_sims, sim_regression(100)))
# extract estimated coefficients for x
estimates <- results[, 2]
# create histogram of estimates
hist(estimates, main = "Histogram of estimated coefficients", xlab = "Estimated coefficient of x", border = "white")
# add vertical line for simulation mean
abline(v = mean(estimates), lwd = 2, col = "black")
# add vertical line for true value
abline(v = 1, lwd = 2, col = "red", lty = 2)
sim_regression <- function(n) {
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
e <- rnorm(n, 0, 1)
y <- x*1 + z*2 + x*z*1 + e
data <- data.frame(x, z, y)
regression <- lm(y ~ x + z + x*z, data = data)
return(coef(regression))
}
set.seed(123)
# run simulation n times
n_sims <- 5000
results <- t(replicate(n_sims, sim_regression(100)))
# extract estimated coefficients for x
estimates <- results[, 2]
# create histogram of estimates
hist(estimates, main = "Histogram of estimated coefficients", xlab = "Estimated Coefficient of x")
# add vertical line for simulation mean
abline(v = mean(estimates), lwd = 2, col = "black")
# add vertical line for true value
abline(v = 1, lwd = 2, col = "red", lty = 2)
n <- 100 # number of observations
# x is uniform, z is normal
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
# error term
e <- rnorm(n, 0, 1)
# formuala for yi
y <- x*1 + z*2 + x*z*1 + e
# combine into data frame
data <- data.frame(x, z, y)
# lm() for linear model
regression <- lm(y ~ x, data = data)
summary(regression)$coefficients
sim_regression <- function(n) {
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
e <- rnorm(n, 0, 1)
y <- x*1 + z*2 + x*z*1 + e
data <- data.frame(x, z, y)
regression <- lm(y ~ x + z + x*z, data = data)
return(coef(regression))
}
# run simulation n times
n_sims <- 5000
results <- t(replicate(n_sims, sim_regression(100)))
# extract estimated coefficients for x
estimates <- results[, 2]
# create histogram of estimates
hist(estimates, main = "Histogram of estimated coefficients", xlab = "Estimated Coefficient of x")
# add vertical line for simulation mean
abline(v = mean(estimates), lwd = 2, col = "black")
# add vertical line for true value
abline(v = 1, lwd = 2, col = "red", lty = 2)
# simulation mean
sim_mean <- mean(estimates)
print(paste0("Simulation mean of estimated coefficients: ", sim_mean))
sim_regression <- function(n) {
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
e <- rnorm(n, 0, 1)
y <- x*1 + z*2 + x*z*1 + e
data <- data.frame(x, z, y)
regression <- lm(y ~ x + z + x*z, data = data)
return(coef(regression))
}
set.seed(14)
# run simulation n times
n_sims <- 5000
results <- t(replicate(n_sims, sim_regression(100)))
# extract estimated coefficients for x
estimates <- results[, 2]
# create histogram of estimates
hist(estimates, main = "Histogram of estimated coefficients", xlab = "Estimated Coefficient of x")
# add vertical line for simulation mean
abline(v = mean(estimates), lwd = 2, col = "black")
# add vertical line for true value
abline(v = 1, lwd = 2, col = "red", lty = 2)
# simulation mean
sim_mean <- mean(estimates)
print(paste0("Simulation mean of estimated coefficients: ", sim_mean))
sim_regression <- function(n) {
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
e <- rnorm(n, 0, 1)
y <- x*1 + z*2 + x*z*1 + e
data <- data.frame(x, z, y)
regression <- lm(y ~ x + z + x*z, data = data)
return(coef(regression))
}
set.seed(14)
# run simulation n times
n_sims <- 5000
results <- t(replicate(n_sims, sim_regression(100)))
# extract estimated coefficients for x
estimates <- results[, 2]
# create histogram of estimates
hist(estimates, main = "Histogram of estimated coefficients", xlab = "Estimated Coefficient of x")
# add vertical line for simulation mean
abline(v = mean(estimates), lwd = 2, col = "black")
# add vertical line for true value
abline(v = 1, lwd = 2, col = "red", lty = 2)
# simulation mean
sim_mean <- mean(estimates)
print(paste0("Simulation mean of estimated coefficients: ", sim_mean))
# define function to simulate regression
simulate_regression <- function(n) {
# x is uniform, z is normal
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
# error term
e <- rnorm(n, 0, 1)
# formula for yi
y <- x*1 + z*2 + x*z*1 + e
# combine into data frame
data <- data.frame(x, z, y)
# lm() for linear model
regression <- lm(y ~ x + z + x*z, data = data)
# return coefficients
return(coef(regression))
}
# set random seed for reproducibility
set.seed(123)
# run simulation 5000 times
n_sims <- 5000
results <- t(replicate(n_sims, simulate_regression(100)))
# extract estimated coefficients for x
estimates <- results[, 2]
# calculate means of estimated coefficients
mean_estimates <- mean(estimates)
mean_beta1 <- 1
mean_beta2 <- 2
mean_beta3 <- 1
# print means of estimated coefficients and true values
print(paste0("Mean of estimated coefficients for x: ", mean_estimates))
print(paste0("True value of beta1: ", mean_beta1))
print(paste0("True value of beta2: ", mean_beta2))
print(paste0("True value of beta3: ", mean_beta3))
# define function to simulate regression
simulate_regression <- function(n) {
# x is uniform, z is normal
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
# error term
e <- rnorm(n, 0, 1)
# formula for yi
y <- x*1 + z*2 + x*z*1 + e
# combine into data frame
data <- data.frame(x, z, y)
# lm() for linear model
regression <- lm(y ~ x + z + x*z, data = data)
# return coefficients
coefs[i] <- coef(regression)['x']
}
# set random seed for reproducibility
set.seed(123)
# run simulation 5000 times
n_sims <- 5000
results <- t(replicate(n_sims, simulate_regression(100)))
sim_regression <- function(n) {
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
e <- rnorm(n, 0, 1)
y <- x*1 + z*2 + x*z*1 + e
data <- data.frame(x, z, y)
regression <- lm(y ~ x + z + x*z, data = data)
# return coefficients as named vector
return(c(beta1 = coef(regression)[1], beta2 = coef(regression)[2],
beta3 = coef(regression)[3], intercept = coef(regression)[4]))
}
set.seed(14)
# run simulation n times
n_sims <- 5000
results <- t(replicate(n_sims, sim_regression(100)))
# extract estimated coefficients for x
estimates <- results[, "beta1"]
# simulation mean
sim_mean <- mean(estimates[i])
sim_regression <- function(n) {
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
e <- rnorm(n, 0, 1)
y <- x*1 + z*2 + x*z*1 + e
data <- data.frame(x, z, y)
regression <- lm(y ~ x + z + x*z, data = data)
return(coef(regression))
}
set.seed(14)
# run simulation n times
n_sims <- 5000
results <- t(replicate(n_sims, sim_regression(100)))
# extract estimated coefficients for x
estimates <- results[, 2]
# create histogram of estimates
hist(estimates, main = "Histogram of estimated coefficients", xlab = "Estimated Coefficient of x")
# add vertical line for simulation mean
abline(v = mean(estimates), lwd = 2, col = "black")
# add vertical line for true value
abline(v = 1, lwd = 2, col = "red", lty = 2)
# simulation mean
sim_mean <- mean(estimates)
print(paste0("Simulation mean of estimated coefficients: ", sim_mean))
sim_regression <- function(n) {
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
e <- rnorm(n, 0, 1)
y <- x*1 + z*2 + x*z*1 + e
data <- data.frame(x, z, y)
regression <- lm(y ~ x + z + x*z, data = data)
# return coefficients as named vector
return(c(beta1 = coef(regression)[1], beta2 = coef(regression)[2],
beta3 = coef(regression)[3], intercept = coef(regression)[4]))
}
set.seed(14)
# run simulation n times
n_sims <- 5000
results <- t(replicate(n_sims, sim_regression(100)))
# extract estimated coefficients for x
estimates <- results[, "beta_x"]
sim_regression <- function(n) {
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
e <- rnorm(n, 0, 1)
y <- x*1 + z*2 + x*z*1 + e
data <- data.frame(x, z, y)
regression <- lm(y ~ x + z + x*z, data = data)
return(coef(regression))
}
set.seed(14)
# run simulation n times
n_sims <- 5000
results <- t(replicate(n_sims, sim_regression(100)))
# extract estimated coefficients for x
estimates <- results[, "x"]
# create histogram of estimates
hist(estimates, main = "Histogram of estimated coefficients", xlab = "Estimated Coefficient of x")
# add vertical line for simulation mean
abline(v = mean(estimates), lwd = 2, col = "black")
# add vertical line for true value
abline(v = 1, lwd = 2, col = "red", lty = 2)
# simulation mean
sim_mean <- mean(estimates)
print(paste0("Simulation mean of estimated coefficients: ", sim_mean))
# simulation mean
sim_mean <- mean(estimates)
print(paste0("Simulation mean of estimated coefficients: ", sim_mean))
n <- 100 # number of observations
# x is uniform, z is normal
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
# error term
e <- rnorm(n, 0, 1)
# formuala for yi
y <- x*1 + z*2 + x*z*1 + e
# combine into data frame
data <- data.frame(x, z, y)
# lm() for linear model
regression <- lm(y ~ x, data = data)
summary(regression)$coefficients
sim_regression <- function(n) {
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
e <- rnorm(n, 0, 1)
y <- x*1 + z*2 + x*z*1 + e
data <- data.frame(x, z, y)
regression <- lm(y ~ x, data = data)
return(coef(regression))
}
set.seed(14)
# run simulation n times
n_sims <- 5000
results <- t(replicate(n_sims, sim_regression(100)))
# extract estimated coefficients for x
estimates <- results[, 2]
# create histogram of estimates
hist(estimates, main = "Histogram of estimated coefficients", xlab = "Estimated Coefficient of x")
# add vertical line for simulation mean
abline(v = mean(estimates), lwd = 2, col = "black")
# add vertical line for true value
abline(v = 1, lwd = 2, col = "red", lty = 2)
# simulation mean
sim_mean <- mean(estimates)
print(paste0("Simulation mean of estimated coefficients: ", sim_mean))
sim_regression <- function(n) {
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
e <- rnorm(n, 0, 1)
y <- x*1 + z*2 + x*z*1 + e
data <- data.frame(x, z, y)
regression <- lm(y ~ x, data = data)
return(coef(regression))
}
set.seed(14)
# run simulation n times
n_sims <- 5000
results <- t(replicate(n_sims, sim_regression(100)))
# extract estimated coefficients for x
estimates <- results[, 2]
# create histogram of estimates
hist(estimates, main = "Histogram of estimated coefficients", xlab = "Estimated Coefficient of x")
# add vertical line for simulation mean
abline(v = mean(estimates), lwd = 2, col = "black")
# add vertical line for true value
abline(v = 1, lwd = 2, col = "red", lty = 2)
sim_regression <- function(n) {
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
e <- rnorm(n, 0, 1)
y <- x*1 + z*2 + x*z*1 + e
data <- data.frame(x, z, y)
regression <- lm(y ~ x, data = data)
return(coef(regression))
}
set.seed(14)
# run simulation n times
n_sims <- 5000
results <- t(replicate(n_sims, sim_regression(100)))
# extract estimated coefficients for x
estimates <- results[, 2]
# create histogram of estimates
hist(estimates, main = "Histogram of estimated coefficients", xlab = "Estimated Coefficient of x")
# add vertical line for simulation mean
abline(v = mean(estimates), lwd = 2, col = "black")
# add vertical line for true value
abline(v = 1, lwd = 2, col = "red", lty = 2)
# number of observations
n <- 100
# x is uniform, z is normal
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
# gamma1 and gamma0
gamma1 <- 1
gamma0 <- 1
# error term for z
e_z <- rnorm(n, 0, 0.5)
# formuala for z
z <- gamma1 * x + gamma0 + e_z
# error term for y
e_y <- rnorm(n, 0, 1)
# formuala for yi
y <- xi + 2*zi + e_y
data <- data.frame(xi, zi, yi)
# number of observations
n <- 100
# x is uniform, z is normal
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
# gamma1 and gamma0
gamma1 <- 1
gamma0 <- 1
# error term for z
e_z <- rnorm(n, 0, 0.5)
# formuala for z
z <- gamma1 * x + gamma0 + e_z
# error term for y
e_y <- rnorm(n, 0, 1)
# formuala for yi
y <- xi + 2*z + e_y
data <- data.frame(x, z, y)
regression <- lm(y ~ x, data = data)
summary(regression)$coefficients
# number of observations
n <- 100
# x is uniform, z is normal
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
# error term for z
e_z <- rnorm(n, 0, 0.5)
# formuala for z
z <- x + 1 + e_z
# error term for y
e_y <- rnorm(n, 0, 1)
# formuala for yi
y <- xi + 2*z + e_y
data <- data.frame(x, z, y)
regression <- lm(y ~ x, data = data)
summary(regression)$coefficients
n <- 100
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
# error term for z
e_z <- rnorm(n, 0, 0.5)
# formuala for z
z <- x + 1 + e_z
# error term for y
e_y <- rnorm(n, 0, 1)
y <- x + 2*z + e_y
data <- data.frame(x, z, y)
regression <- lm(y ~ x, data = data)
summary(regression)$coefficients
n <- 100
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
# error term for z
e_z <- rnorm(n, 0, 0.5)
# formuala for z
z <- x + 1 + e_z
# error term for y
e_y <- rnorm(n, 0, 1)
y <- x + 2*z + e_y
data <- data.frame(x, z, y)
regression <- lm(y ~ x, data = data)
summary(regression)$coefficients
sim_regression <- function(n) {
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
e <- rnorm(n, 0, 1)
y <- x*1 + z*2 + x*z*1 + e
data <- data.frame(x, z, y)
regression <- lm(y ~ x, data = data)
return(coef(regression))
}
set.seed(14)
# run simulation n times
n_sims <- 5000
results <- t(replicate(n_sims, sim_regression(100)))
# extract estimated coefficients for x
estimates <- results[, 2]
# create histogram of estimates
hist(estimates, main = "Histogram of estimated coefficients", xlab = "Estimated Coefficient of x")
# add vertical line for simulation mean
abline(v = mean(estimates), lwd = 2, col = "black")
# add vertical line for true value
abline(v = 1, lwd = 2, col = "red", lty = 2)
# simulation mean
sim_mean <- mean(estimates)
print(paste0("Simulation mean of estimated coefficients: ", sim_mean))
sim_regression <- function(n) {
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
e <- rnorm(n, 0, 1)
y <- x*1 + z*2 + x*z*1 + e
data <- data.frame(x, z, y)
regression <- lm(y ~ x, data = data)
return(coef(regression))
}
# run simulation n times
n_sims <- 5000
results <- t(replicate(n_sims, sim_regression(100)))
# extract estimated coefficients for x
estimates <- results[, 2]
# create histogram of estimates
hist(estimates, main = "Histogram of estimated coefficients", xlab = "Estimated Coefficient of x")
# add vertical line for simulation mean
abline(v = mean(estimates), lwd = 2, col = "black")
# add vertical line for true value
abline(v = 1, lwd = 2, col = "red", lty = 2)
sim_regression <- function(n) {
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
e <- rnorm(n, 0, 1)
y <- x*1 + z*2 + x*z*1 + e
data <- data.frame(x, z, y)
regression <- lm(y ~ x, data = data)
return(coef(regression))
}
set.seed(14)
# run simulation n times
n_sims <- 5000
results <- t(replicate(n_sims, sim_regression(100)))
# extract estimated coefficients for x
estimates <- results[, 2]
# create histogram of estimates
hist(estimates, main = "Histogram of estimated coefficients", xlab = "Estimated Coefficient of x")
# add vertical line for simulation mean
abline(v = mean(estimates), lwd = 2, col = "black")
# add vertical line for true value
abline(v = 1, lwd = 2, col = "red", lty = 2)
# simulation mean
sim_mean <- mean(estimates)
print(paste0("Simulation mean of estimated coefficients: ", sim_mean))
sim_regression <- function(n) {
x <- runif(n, -2, 2)
z <- rnorm(n, 0, 0.5)
e <- rnorm(n, 0, 1)
y <- x*1 + z*2 + x*z*1 + e
data <- data.frame(x, z, y)
regression <- lm(y ~ x, data = data)
return(coef(regression))
}
set.seed(14)
# run simulation n times
n_sims <- 5000
results <- t(replicate(n_sims, sim_regression(100)))
# extract estimated coefficients for x
estimates <- results[, 2]
# simulation mean
sim_mean <- mean(estimates)
print(paste0("Simulation mean of estimated coefficients: ", sim_mean))
#?weather
sessionInfo()
